%!PS-Adobe-2.0 EPSF-2.0
%%Title: soluce-lfs3.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Mon Feb  7 21:55:44 2005
%%For: pad@ryxa (pad)
%%BoundingBox: 0 0 775 541
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 541 moveto 0 0 lineto 775 0 lineto 775 541 lineto closepath clip newpath
-4.4 544.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% bricks
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 16 true [ 16 0 0 -16 0 16 ]
	{<008000800080008000800080
	 0080ffff8000800080008000
	 800080008000ffff>}
        imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P7 exch def

% hexagons
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 60 36 true [ 60 0 0 -36 0 36 ]
	{<008000040000000001000002000000000100000200000000
	020000010000000002000001000000000400000080000000
	040000008000000008000000400000000800000040000000
	100000002000000010000000200000002000000010000000
	200000001000000040000000080000004000000008000000
	800000000400000080000000040000000000000003fffff0
	800000000400000080000000040000004000000008000000
	400000000800000020000000100000002000000010000000
	100000002000000010000000200000000800000040000000
	080000004000000004000000800000000400000080000000
	020000010000000002000001000000000100000200000000
	0100000200000000008000040000000000fffffc00000000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P19 exch def

% horizontal sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<000000000000000000000000000000000000000000000000
	000000000100010002800280044004400820082010101010
	20082008400440048002800200010001>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P21 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
15.000 slw
n 7785 825 m 7650 825 7650 1140 135 arcto 4 {pop} repeat
  7650 1275 8040 1275 135 arcto 4 {pop} repeat
  8175 1275 8175 960 135 arcto 4 {pop} repeat
  8175 825 7785 825 135 arcto 4 {pop} repeat
 cp gs col30 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 600.00 scf sf
450 3300 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 600.00 scf sf
450 3450 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 600.00 scf sf
450 3600 m
gs 1 -1 sc (.) col0 sh gr
0.000 slw
% Ellipse
n 225 375 75 75 0 360 DrawEllipse gs col4 1.00 shd ef gr 
% Polyline
15.000 slw
n 2235 1500 m 2100 1500 2100 1815 135 arcto 4 {pop} repeat
  2100 1950 2490 1950 135 arcto 4 {pop} repeat
  2625 1950 2625 1635 135 arcto 4 {pop} repeat
  2625 1500 2235 1500 135 arcto 4 {pop} repeat
 cp gs col8 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2910 1500 m 2775 1500 2775 1815 135 arcto 4 {pop} repeat
  2775 1950 3165 1950 135 arcto 4 {pop} repeat
  3300 1950 3300 1635 135 arcto 4 {pop} repeat
  3300 1500 2910 1500 135 arcto 4 {pop} repeat
 cp gs /PC [[1.00 0.88 0.88] [0.00 0.00 0.00]] def
15.00 15.00 sc P19 [30 0 0 -18 185.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2910 2325 m 2775 2325 2775 2640 135 arcto 4 {pop} repeat
  2775 2775 3165 2775 135 arcto 4 {pop} repeat
  3300 2775 3300 2460 135 arcto 4 {pop} repeat
  3300 2325 2910 2325 135 arcto 4 {pop} repeat
 cp gs /PC [[1.00 0.88 0.88] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 185.00 155.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3585 1500 m 3450 1500 3450 1815 135 arcto 4 {pop} repeat
  3450 1950 3840 1950 135 arcto 4 {pop} repeat
  3975 1950 3975 1635 135 arcto 4 {pop} repeat
  3975 1500 3585 1500 135 arcto 4 {pop} repeat
 cp gs col30 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3585 2325 m 3450 2325 3450 2640 135 arcto 4 {pop} repeat
  3450 2775 3840 2775 135 arcto 4 {pop} repeat
  3975 2775 3975 2460 135 arcto 4 {pop} repeat
  3975 2325 3585 2325 135 arcto 4 {pop} repeat
 cp gs col30 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2235 2325 m 2100 2325 2100 2640 135 arcto 4 {pop} repeat
  2100 2775 2490 2775 135 arcto 4 {pop} repeat
  2625 2775 2625 2460 135 arcto 4 {pop} repeat
  2625 2325 2235 2325 135 arcto 4 {pop} repeat
 cp gs col13 1.00 shd ef gr gs col0 s gr 
/Helvetica ff 360.00 scf sf
525 1050 m
gs 1 -1 sc (properties to files) col4 sh gr
/Times-Roman ff 450.00 scf sf
1800 1875 m
gs 1 -1 sc (=) col0 sh gr
/Times-Roman ff 450.00 scf sf
1800 2700 m
gs 1 -1 sc (=) col0 sh gr
/Helvetica ff 360.00 scf sf
300 1875 m
gs 1 -1 sc (file1.txt) col26 sh gr
/Helvetica ff 360.00 scf sf
300 2700 m
gs 1 -1 sc (file2.jpg) col26 sh gr
/Helvetica ff 360.00 scf sf
525 525 m
gs 1 -1 sc (assign multiple) col4 sh gr
/Helvetica ff 600.00 scf sf
4350 900 m
gs 1 -1 sc (LFS \(1/2\)) col0 sh gr
0.000 slw
% Ellipse
n 7800 900 75 75 0 360 DrawEllipse gs col6 1.00 shd ef gr 
% Ellipse
n 8025 900 75 75 0 360 DrawEllipse gs col4 1.00 shd ef gr 
% Ellipse
n 8025 1200 75 75 0 360 DrawEllipse gs col1 1.00 shd ef gr 
% Ellipse
n 7725 1050 75 75 0 360 DrawEllipse gs col25 1.00 shd ef gr 
% Ellipse
n 8100 1050 75 75 0 360 DrawEllipse gs col23 1.00 shd ef gr 
% Ellipse
n 7800 1200 75 75 0 360 DrawEllipse gs col13 1.00 shd ef gr 
% Ellipse
n 8250 375 75 75 0 360 DrawEllipse gs col4 1.00 shd ef gr 
% Polyline
15.000 slw
n 7785 1650 m 7650 1650 7650 1965 135 arcto 4 {pop} repeat
  7650 2100 8040 2100 135 arcto 4 {pop} repeat
  8175 2100 8175 1785 135 arcto 4 {pop} repeat
  8175 1650 7785 1650 135 arcto 4 {pop} repeat
 cp gs col4 1.00 shd ef gr gs col0 s gr 
% Polyline
n 10035 1650 m 9900 1650 9900 1965 135 arcto 4 {pop} repeat
  9900 2100 10290 2100 135 arcto 4 {pop} repeat
  10425 2100 10425 1785 135 arcto 4 {pop} repeat
  10425 1650 10035 1650 135 arcto 4 {pop} repeat
 cp gs /PC [[1.00 0.88 0.88] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 660.00 110.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10935 1650 m 10800 1650 10800 1965 135 arcto 4 {pop} repeat
  10800 2100 11190 2100 135 arcto 4 {pop} repeat
  11325 2100 11325 1785 135 arcto 4 {pop} repeat
  11325 1650 10935 1650 135 arcto 4 {pop} repeat
 cp gs /PC [[1.00 0.88 0.88] [0.00 0.00 0.00]] def
15.00 15.00 sc P19 [30 0 0 -18 720.00 110.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11835 1650 m 11700 1650 11700 1965 135 arcto 4 {pop} repeat
  11700 2100 12090 2100 135 arcto 4 {pop} repeat
  12225 2100 12225 1785 135 arcto 4 {pop} repeat
  12225 1650 11835 1650 135 arcto 4 {pop} repeat
 cp gs /PC [[1.00 0.88 0.88] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 780.00 110.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10860 825 m 10725 825 10725 1140 135 arcto 4 {pop} repeat
  10725 1275 11115 1275 135 arcto 4 {pop} repeat
  11250 1275 11250 960 135 arcto 4 {pop} repeat
  11250 825 10860 825 135 arcto 4 {pop} repeat
 cp gs col30 1.00 shd ef gr gs col0 s gr 
% Polyline
30.000 slw
gs  clippath
8250 1241 m 8223 1295 l 8441 1405 l 8321 1311 l 8468 1351 l cp
eoclip
n 8996 1649 m
 8250 1275 l gs col0 s gr gr

% arrowhead
n 8468 1351 m 8321 1311 l 8441 1405 l 8428 1364 l 8468 1351 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
10679 1290 m 10644 1241 l 10445 1383 l 10585 1321 l 10480 1432 l cp
eoclip
n 10125 1650 m
 10650 1275 l gs col0 s gr gr

% arrowhead
30.000 slw
n 10480 1432 m 10585 1321 l 10445 1383 l 10487 1390 l 10480 1432 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
11326 1241 m 11297 1293 l 11510 1413 l 11394 1314 l 11539 1360 l cp
eoclip
n 12000 1650 m
 11325 1275 l gs col0 s gr gr

% arrowhead
n 11539 1360 m 11394 1314 l 11510 1413 l 11498 1372 l 11539 1360 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
11055 1335 m 10995 1335 l 10995 1579 l 11025 1429 l 11055 1579 l cp
eoclip
n 11025 1650 m
 11025 1350 l gs col0 s gr gr

% arrowhead
n 11055 1579 m 11025 1429 l 10995 1579 l 11025 1549 l 11055 1579 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
7980 1260 m 7920 1260 l 7920 1504 l 7950 1354 l 7980 1504 l cp
eoclip
n 7950 1650 m
 7950 1275 l gs col0 s gr gr

% arrowhead
30.000 slw
n 7980 1504 m 7950 1354 l 7920 1504 l 7950 1474 l 7980 1504 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
7527 1294 m 7499 1241 l 7283 1355 l 7430 1312 l 7311 1408 l cp
eoclip
n 6862 1612 m
 7500 1275 l gs col0 s gr gr

% arrowhead
30.000 slw
n 7311 1408 m 7430 1312 l 7283 1355 l 7323 1368 l 7311 1408 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 6435 2475 m 6300 2475 6300 2790 135 arcto 4 {pop} repeat
  6300 2925 6690 2925 135 arcto 4 {pop} repeat
  6825 2925 6825 2610 135 arcto 4 {pop} repeat
  6825 2475 6435 2475 135 arcto 4 {pop} repeat
 cp gs col8 1.00 shd ef gr gs col0 s gr 
% Polyline
n 7260 2475 m 7125 2475 7125 2790 135 arcto 4 {pop} repeat
  7125 2925 7515 2925 135 arcto 4 {pop} repeat
  7650 2925 7650 2610 135 arcto 4 {pop} repeat
  7650 2475 7260 2475 135 arcto 4 {pop} repeat
 cp gs col15 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
6858 2106 m 6810 2070 l 6663 2266 l 6777 2164 l 6711 2302 l cp
eoclip
n 6600 2400 m
 6825 2100 l gs col0 s gr gr

% arrowhead
30.000 slw
n 6711 2302 m 6777 2164 l 6663 2266 l 6705 2260 l 6711 2302 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
6907 2067 m 6869 2113 l 7057 2270 l 6961 2151 l 7095 2223 l cp
eoclip
n 7350 2475 m
 6900 2100 l gs col0 s gr gr

% arrowhead
30.000 slw
n 7095 2223 m 6961 2151 l 7057 2270 l 7053 2227 l 7095 2223 l 
 cp gs -0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 6735 1650 m 6600 1650 6600 1965 135 arcto 4 {pop} repeat
  6600 2100 6990 2100 135 arcto 4 {pop} repeat
  7125 2100 7125 1785 135 arcto 4 {pop} repeat
  7125 1650 6735 1650 135 arcto 4 {pop} repeat
 cp gs col1 1.00 shd ef gr gs col0 s gr 
% Polyline
n 8835 1650 m 8700 1650 8700 1965 135 arcto 4 {pop} repeat
  8700 2100 9090 2100 135 arcto 4 {pop} repeat
  9225 2100 9225 1785 135 arcto 4 {pop} repeat
  9225 1650 8835 1650 135 arcto 4 {pop} repeat
 cp gs col13 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 600.00 scf sf
7800 2400 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 600.00 scf sf
8850 2400 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 600.00 scf sf
10050 2475 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 600.00 scf sf
11025 2475 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 600.00 scf sf
11850 2475 m
gs 1 -1 sc (...) col0 sh gr
/Times-Roman ff 600.00 scf sf
11775 1050 m
gs 1 -1 sc (...) col0 sh gr
/Helvetica ff 360.00 scf sf
8550 525 m
gs 1 -1 sc (order properties) col4 sh gr
% Polyline
0.000 slw
n 75 75 m 12975 75 l 12975 9075 l 75 9075 l
 cp 
% Ellipse
n 3600 1650 75 75 0 360 DrawEllipse gs col22 1.00 shd ef gr 
% Ellipse
n 3825 1800 75 75 0 360 DrawEllipse gs col22 1.00 shd ef gr 
% Ellipse
n 3600 2475 75 75 0 360 DrawEllipse gs col22 1.00 shd ef gr 
% Ellipse
n 3825 2625 75 75 0 360 DrawEllipse gs col22 1.00 shd ef gr 
$F2psEnd
rs
end
